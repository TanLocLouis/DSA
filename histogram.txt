class Solution {
public:
    int calc(vector<int>& hist) {
        int area = 0;
        stack<int> st;

        for (int j = 0; j <= hist.size(); j++) {
            while(st.size() && (j == hist.size() || hist[st.top()] > hist[j])) {
                int h = hist[st.top()];
                st.pop();
                int w = st.empty() ? j : j - st.top() - 1;
                area = max(area, h * w);
            }
            st.push(j);
        }
        return area;
    }

    int maximalRectangle(vector<vector<char>>& matrix) {
        if (matrix.empty()) return 0;

        int ans = 0;
        vector<int> hist(matrix[0].size());

        for (auto& row : matrix) {
            for (int j = 0; j < row.size(); j++) {
                hist[j] = row[j] == '0' ? 0 : hist[j] + 1;
            }
            ans = max(ans, calc(hist));
        }

        return ans;
    }
};